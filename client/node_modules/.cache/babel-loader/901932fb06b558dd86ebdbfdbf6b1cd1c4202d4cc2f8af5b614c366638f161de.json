{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthProvider'; // Make sure this path is correct\n\n/**\r\n * ==============================================================================\r\n * FILE: /client/src/hooks/useAuth.js\r\n * PURPOSE: A custom hook to provide easy access to the authentication context.\r\n *\r\n * HOW IT WORKS:\r\n * Instead of importing `useContext` and `AuthContext` in every component that\r\n * needs user data, you can simply import and use this hook. It's a cleaner\r\n * and more convenient way to consume the context.\r\n * ==============================================================================\r\n */\nconst useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n\n  // This is a good practice to ensure the hook is used within an AuthProvider.\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default useAuth;","map":{"version":3,"names":["useContext","AuthContext","useAuth","_s","context","undefined","Error"],"sources":["D:/Users/MAYANK/DEV Flow/devflow-project/client/src/hooks/useAuth.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthProvider'; // Make sure this path is correct\r\n\r\n/**\r\n * ==============================================================================\r\n * FILE: /client/src/hooks/useAuth.js\r\n * PURPOSE: A custom hook to provide easy access to the authentication context.\r\n *\r\n * HOW IT WORKS:\r\n * Instead of importing `useContext` and `AuthContext` in every component that\r\n * needs user data, you can simply import and use this hook. It's a cleaner\r\n * and more convenient way to consume the context.\r\n * ==============================================================================\r\n */\r\nconst useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n\r\n  // This is a good practice to ensure the hook is used within an AuthProvider.\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport default useAuth;\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,yBAAyB,CAAC,CAAC;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,OAAO,GAAGJ,UAAU,CAACC,WAAW,CAAC;;EAEvC;EACA,IAAIG,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EAEA,OAAOF,OAAO;AAChB,CAAC;AAACD,EAAA,CATID,OAAO;AAWb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}