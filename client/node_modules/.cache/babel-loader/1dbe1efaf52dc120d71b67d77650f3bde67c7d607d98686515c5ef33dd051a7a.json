{"ast":null,"code":"import api from './api'; // Import the configured Axios instance\n\n/**\r\n * ==============================================================================\r\n * FILE: /client/src/api/auth.api.js\r\n * PURPOSE: Contains all API functions related to user authentication.\r\n * ==============================================================================\r\n */\n\n/**\r\n * Sends a login request to the server.\r\n * @param {object} credentials - { email, password }\r\n * @returns {Promise<object>} The server's response.\r\n */\nconst login = credentials => {\n  return api.post('/auth/login', credentials);\n};\n\n/**\r\n * Sends a registration request to the server.\r\n * @param {object} userData - { name, email, password }\r\n * @returns {Promise<object>} The server's response.\r\n */\nconst signup = userData => {\n  return api.post('/auth/signup', userData);\n};\n\n/**\r\n * Sends a request to get the current user's data using their token.\r\n * @returns {Promise<object>} The server's response with the user's data.\r\n */\nconst getCurrentUser = () => {\n  return api.get('/auth/me');\n};\n\n// Group all auth functions into an object for a default export\nconst authApi = {\n  login,\n  signup,\n  getCurrentUser\n};\nexport default authApi;","map":{"version":3,"names":["api","login","credentials","post","signup","userData","getCurrentUser","get","authApi"],"sources":["D:/Users/MAYANK/DEV Flow/devflow-project/client/src/api/auth.api.js"],"sourcesContent":["import api from './api'; // Import the configured Axios instance\r\n\r\n/**\r\n * ==============================================================================\r\n * FILE: /client/src/api/auth.api.js\r\n * PURPOSE: Contains all API functions related to user authentication.\r\n * ==============================================================================\r\n */\r\n\r\n/**\r\n * Sends a login request to the server.\r\n * @param {object} credentials - { email, password }\r\n * @returns {Promise<object>} The server's response.\r\n */\r\nconst login = (credentials) => {\r\n  return api.post('/auth/login', credentials);\r\n};\r\n\r\n/**\r\n * Sends a registration request to the server.\r\n * @param {object} userData - { name, email, password }\r\n * @returns {Promise<object>} The server's response.\r\n */\r\nconst signup = (userData) => {\r\n  return api.post('/auth/signup', userData);\r\n};\r\n\r\n/**\r\n * Sends a request to get the current user's data using their token.\r\n * @returns {Promise<object>} The server's response with the user's data.\r\n */\r\nconst getCurrentUser = () => {\r\n  return api.get('/auth/me');\r\n};\r\n\r\n// Group all auth functions into an object for a default export\r\nconst authApi = {\r\n  login,\r\n  signup,\r\n  getCurrentUser,\r\n};\r\n\r\nexport default authApi;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO,CAAC,CAAC;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAIC,WAAW,IAAK;EAC7B,OAAOF,GAAG,CAACG,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;AAC7C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAME,MAAM,GAAIC,QAAQ,IAAK;EAC3B,OAAOL,GAAG,CAACG,IAAI,CAAC,cAAc,EAAEE,QAAQ,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,OAAON,GAAG,CAACO,GAAG,CAAC,UAAU,CAAC;AAC5B,CAAC;;AAED;AACA,MAAMC,OAAO,GAAG;EACdP,KAAK;EACLG,MAAM;EACNE;AACF,CAAC;AAED,eAAeE,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}