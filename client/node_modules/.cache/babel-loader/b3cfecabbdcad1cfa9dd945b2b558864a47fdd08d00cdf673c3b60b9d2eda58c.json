{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\MAYANK\\\\DEV Flow\\\\devflow-project\\\\client\\\\src\\\\context\\\\AuthProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from '../api/api'; // Your configured Axios instance\nimport authApi from '../api/auth.api'; // Import the authApi functions\n\n// Create the context that components will consume\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\n\n/**\r\n * ==============================================================================\r\n * FILE: /client/src/context/AuthProvider.jsx\r\n * PURPOSE: Manages global authentication state.\r\n * (UPDATED to include the signup function)\r\n * ==============================================================================\r\n */\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const verifyToken = async () => {\n        try {\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          const response = await authApi.getCurrentUser();\n          setUser(response.data);\n        } catch (error) {\n          console.error(\"Token verification failed:\", error);\n          localStorage.removeItem('token');\n        }\n      };\n      verifyToken();\n    }\n    setLoading(false);\n  }, []);\n\n  // --- Authentication Functions ---\n\n  const login = async (email, password) => {\n    try {\n      const response = await authApi.login({\n        email,\n        password\n      });\n      const {\n        token,\n        ...userData\n      } = response.data;\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(userData);\n      return userData;\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      throw error;\n    }\n  };\n  const signup = async (name, email, password) => {\n    try {\n      // Make a real API call to the backend's signup endpoint\n      const response = await authApi.signup({\n        name,\n        email,\n        password\n      });\n      const {\n        token,\n        ...userData\n      } = response.data;\n\n      // After a successful signup, automatically log the user in\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(userData);\n      return userData;\n    } catch (error) {\n      console.error(\"Signup failed:\", error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    window.location.href = '/login';\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    signup,\n    // Add the signup function to the context value\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","authApi","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","verifyToken","defaults","headers","common","response","getCurrentUser","data","error","console","removeItem","login","email","password","userData","setItem","signup","name","logout","window","location","href","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/MAYANK/DEV Flow/devflow-project/client/src/context/AuthProvider.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport api from '../api/api'; // Your configured Axios instance\r\nimport authApi from '../api/auth.api'; // Import the authApi functions\r\n\r\n// Create the context that components will consume\r\nexport const AuthContext = createContext(null);\r\n\r\n/**\r\n * ==============================================================================\r\n * FILE: /client/src/context/AuthProvider.jsx\r\n * PURPOSE: Manages global authentication state.\r\n * (UPDATED to include the signup function)\r\n * ==============================================================================\r\n */\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const verifyToken = async () => {\r\n        try {\r\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          const response = await authApi.getCurrentUser();\r\n          setUser(response.data);\r\n        } catch (error) {\r\n          console.error(\"Token verification failed:\", error);\r\n          localStorage.removeItem('token');\r\n        }\r\n      };\r\n      verifyToken();\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // --- Authentication Functions ---\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await authApi.login({ email, password });\r\n      const { token, ...userData } = response.data;\r\n      localStorage.setItem('token', token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(userData);\r\n      return userData;\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const signup = async (name, email, password) => {\r\n    try {\r\n      // Make a real API call to the backend's signup endpoint\r\n      const response = await authApi.signup({ name, email, password });\r\n      \r\n      const { token, ...userData } = response.data;\r\n\r\n      // After a successful signup, automatically log the user in\r\n      localStorage.setItem('token', token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(userData);\r\n      \r\n      return userData;\r\n    } catch (error) {\r\n      console.error(\"Signup failed:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete api.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    window.location.href = '/login';\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    loading,\r\n    login,\r\n    signup, // Add the signup function to the context value\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}